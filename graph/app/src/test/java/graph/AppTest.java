/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    // Node can be successfully added to the graph
    @Test void test_add_node() {

        Graph graph=new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");


        System.out.println(graph.printGraph());

        String result="Vertex{data='A'}[]Vertex{data='B'}[]Vertex{data='C'}[]";
        assertEquals(graph.printGraph(),result);


    }
    //An edge can be successfully added to the graph
    @Test void Test_add_edge() {

        Graph graph=new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");


        //add edge for graph
        graph.addEdges("A","B");

        System.out.println(graph.printGraph());
       String result="Vertex{data='A'}[Vertex{data='B'}]Vertex{data='B'}[Vertex{data='A'}]Vertex{data='C'}[]";
        assertEquals(graph.printGraph(),result);

    }
// A collection of all nodes can be properly retrieved from the graph
@Test void Test() {

    Graph graph=new Graph();

    graph.addVertex("A");
    graph.addVertex("B");
    graph.addVertex("C");


    //add edge for graph
    graph.addEdges("A","B");
    System.out.println(graph.get_nodes());
    System.out.println(graph.printGraph());
    String result="[Vertex{data='A'}, Vertex{data='B'}, Vertex{data='C'}]";
    assertEquals(graph.get_nodes().toString(),result);

}

// All appropriate neighbors can be retrieved from the graph
    @Test void Test2() {


        Graph graph=new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");

        graph.addEdges("A","B");
        graph.addEdges("B","C");
        graph.addEdges("A","C");

        System.out.println(graph.printGraph());

        Vertex vertex=new Vertex("A");


        String result="[Vertex{data='B'}, Vertex{data='C'}, Vertex{data='2'}]";
        assertEquals(graph.get_neighbors(vertex).toString(),result);

    }
    // The proper size is returned, representing the number of nodes in the graph
    @Test void Test3() {


        Graph graph=new Graph();

        graph.addVertex("A");
        graph.addVertex("B");
        graph.addVertex("C");

        graph.addEdges("A","B");
        graph.addEdges("B","C");
        graph.addEdges("A","C");

        System.out.println(graph.printGraph());



        int result=3;
        assertEquals(graph.size(),result);

    }




}
